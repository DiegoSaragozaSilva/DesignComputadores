tmp(0) := "0100000000000";	-- LDI $0			# Zera os displays de 7 segmentos
tmp(1) := "0101100100000";	-- STA @288
tmp(2) := "0101100100001";	-- STA @289
tmp(3) := "0101100100010";	-- STA @290
tmp(4) := "0101100100011";	-- STA @291
tmp(5) := "0101100100100";	-- STA @292
tmp(6) := "0101100100101";	-- STA @293
tmp(7) := "0100000000000";	-- LDI $0
tmp(8) := "0101100000000";	-- STA @256		# Apaga todos os LEDs
tmp(9) := "0101100000001";	-- STA @257
tmp(10) := "0101100000010";	-- STA @258
tmp(11) := "0100000000000";	-- LDI $0			# Zerando as memórias de contador
tmp(12) := "0101000000000";	-- STA @0			# Unidade
tmp(13) := "0101000000001";	-- STA @1			# Dezena
tmp(14) := "0101000000010";	-- STA @2			# Centena
tmp(15) := "0100000000001";	-- LDI $1			# Loop principal | Checando se KEY0 foi pressionado
tmp(16) := "1000101100000";	-- CEQ @352
tmp(17) := "0111000010100";	-- JEQ @20			# Caso KEY0 == 1 vai para subrotina de incremento de valor
tmp(18) := "0110000010101";	-- JMP @21
tmp(19) := "1001000100000";	-- JSR @32
tmp(20) := "0001000000000";	-- LDA @0			# Carrega os valores do contador nos displays
tmp(21) := "0101100100000";	-- STA @288
tmp(22) := "0001000000001";	-- LDA @1
tmp(23) := "0101100100001";	-- STA @289
tmp(24) := "0001000000010";	-- LDA @2
tmp(25) := "0101100100010";	-- STA @290        	# Vai para a subrotina de verificar o limite de contagem [NA LINHA DE BAIXO]
tmp(26) := "0100000000001";	-- LDI $1			# Checando se FPGA_RESET foi pressionado
tmp(27) := "1000101100100";	-- CEQ @356
tmp(28) := "0111000000000";	-- JEQ @0			# Caso FPGA_RESET == 1 reinicia o programa, zerando a contagem e displays
tmp(29) := "0110000010000";	-- JMP @16			# Reinicia o loop
tmp(30) := "0100000001001";	-- LDI $9			# Rotina de incremento de valor
tmp(31) := "0101000000011";	-- STA @3
tmp(32) := "0001000000000";	-- LDA @0
tmp(33) := "1000000000011";	-- CEQ @3
tmp(34) := "0111000100101";	-- JEQ @37
tmp(35) := "0110000101000";	-- JMP @40
tmp(36) := "0100000000000";	-- LDI $0
tmp(37) := "0101000000000";	-- STA @0			# Caso MEM[0] == 9, a contagem é zerada nesta casa, caso não, seu valor é incrementado em 1
tmp(38) := "0110000101110";	-- JMP @46			# Pula para a próxima casa
tmp(39) := "0100000000001";	-- LDI $1
tmp(40) := "0101000000011";	-- STA @3
tmp(41) := "0001000000000";	-- LDA @0
tmp(42) := "0010000000011";	-- SOMA @3
tmp(43) := "0001000000000";	-- LDA @0			# Incrementa MEM[0] em 1
tmp(44) := "1010000000000";	-- RET			# Finaliza a subrotina
tmp(45) := "0100000001001";	-- LDI $9
tmp(46) := "0101000000011";	-- STA @3
tmp(47) := "0001000000001";	-- LDA @1
tmp(48) := "1000000000011";	-- CEQ @3
tmp(49) := "0111000110100";	-- JEQ @52
tmp(50) := "0110000110111";	-- JMP @55
tmp(51) := "0100000000000";	-- LDI $0
tmp(52) := "0101000000001";	-- STA @1			# Caso MEM[1] == 9, a contagem nesta casa é zerada, caso não, seu valor é incrementado em 1
tmp(53) := "0110000111101";	-- JMP @61			# Pula para a próxima casa
tmp(54) := "0100000000001";	-- LDI $1
tmp(55) := "0101000000011";	-- STA @3
tmp(56) := "0001000000001";	-- LDA @1
tmp(57) := "0010000000011";	-- SOMA @3
tmp(58) := "0001000000001";	-- LDA @1			# Incrementa MEM[1] em 1
tmp(59) := "0110000101101";	-- JMP @45			# Finaliza a subrotina
tmp(60) := "0100000001001";	-- LDI $9
tmp(61) := "0101000000011";	-- STA @3
tmp(62) := "0001000000010";	-- LDA @2
tmp(63) := "1000000000011";	-- CEQ @3
tmp(64) := "0111001000011";	-- JEQ @67
tmp(65) := "0110001000110";	-- JMP @70
tmp(66) := "0100000000000";	-- LDI $0
tmp(67) := "0101000000010";	-- STA @2			# Caso MEM [2] == 9, a contagem nesta casa é zerada, caso não, seu valor é incrementado em 1
tmp(68) := "0110000101101";	-- JMP @45			# Finaliza subrotina
tmp(69) := "0100000000001";	-- LDI $1
tmp(70) := "0101000000011";	-- STA @3
tmp(71) := "0001000000010";	-- LDA @2
tmp(72) := "0010000000011";	-- SOMA @3
tmp(73) := "0101000000010";	-- STA @2			# Incrementa MEM[2] em 1
tmp(74) := "0110000101101";	-- JMP @45			# Finaliza subrotina
